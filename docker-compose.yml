version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: kendy-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: kendy
      POSTGRES_PASSWORD: kendy_dev_password
      POSTGRES_DB: kendy_mcp
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U kendy']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kendy-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (uncomment when ready)
  # backend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: kendy-backend
  #   restart: unless-stopped
  #   environment:
  #     NODE_ENV: development
  #     PORT: 3000
  #     DATABASE_URL: postgresql://kendy:kendy_dev_password@postgres:5432/kendy_mcp
  #     REDIS_URL: redis://redis:6379
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./backend:/app/backend
  #     - ./prisma:/app/prisma
  #     - /app/node_modules
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
